# -*- coding: utf-8 -*-
"""
Задание 12.2


Функция ping_ip_addresses из задания 12.1 принимает только список адресов,
но было бы удобно иметь возможность указывать адреса с помощью диапазона,
например, 192.168.100.1-10.

В этом задании необходимо создать функцию convert_ranges_to_ip_list,
которая конвертирует список IP-адресов в разных форматах в список,
где каждый IP-адрес указан отдельно.

Функция ожидает как аргумент список, в котором содержатся IP-адреса
и/или диапазоны IP-адресов.

Элементы списка могут быть в формате:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Если адрес указан в виде диапазона, надо развернуть диапазон в отдельные
адреса, включая последний адрес диапазона.
Для упрощения задачи, можно считать, что в диапазоне всегда меняется только
последний октет адреса.

Функция возвращает список IP-адресов.

Например, если передать функции convert_ranges_to_ip_list такой список:
['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132']

Функция должна вернуть такой список:
['8.8.4.4', '1.1.1.1', '1.1.1.2', '1.1.1.3', '172.21.41.128',
 '172.21.41.129', '172.21.41.130', '172.21.41.131', '172.21.41.132']

"""

def convert_ranges_to_ip_list(ip_ranges):
    ip_list = []
    for ips in ip_ranges:
        if '-' in ips:
            ips = ips.replace('-', '.')
            oct1, oct2, oct3, oct4, *_, oct_last = ips.split('.')
            count = int (oct_last) - int(oct4) + 1

            for cnt in range(count):
                oct4_new = int(oct4) + cnt
                ip = f'{oct1}.{oct2}.{oct3}.{oct4_new}'
                # print(ip)
                ip_list.append(ip)
        else:
            ip_list.append(ips)

    return ip_list


if __name__ == '__main__':
    ip_ranges = ['192.168.1.190-199', '10.3.1.10-10.3.1.15', '10.10.10.10']
    ip_list = convert_ranges_to_ip_list(ip_ranges)
    print(ip_list)